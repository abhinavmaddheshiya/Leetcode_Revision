typedef long long ll;
class Solution {
public:
    long long maximumSumOfHeights(vector<int>& h) {
        int n=h.size();
        stack<ll> st;
        vector<ll> up(n);
        for(ll i=0;i<n;i++){
            while(st.size() && h[st.top()]>h[i])st.pop();
            if(st.size()==0){
                up[i]=h[i]*(i+1);
            }else{
                up[i]=up[st.top()]+(h[i]*(i-st.top()));
            }
            // cout<<i<<" "<<up[i]<<endl;
            st.push(i);
        }
        while(st.size())st.pop();
        vector<ll> down(n);
        ll ans=0;
        for(ll i=n-1;i>=0;i--){
            while(st.size() && h[st.top()]>h[i])st.pop();
            if(st.size()==0){
                down[i]=h[i]*(n-i);
            }else{
                down[i]=down[st.top()]+(h[i]*(st.top()-i));
            }
            // cout<<i<<" "<<down[i]<<endl;
            st.push(i);
            ans=max(ans, up[i]+down[i]-h[i]);
        }
        return ans;
    }
};
